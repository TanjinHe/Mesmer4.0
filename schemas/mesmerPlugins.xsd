<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.chem.leeds.ac.uk/mesmer"
    elementFormDefault="qualified"
    xmlns="http://www.chem.leeds.ac.uk/mesmer"
    xmlns:me="http://www.chem.leeds.ac.uk/mesmer"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:cml="http://www.xml-cml.org/schema"
>
  <xs:import namespace="http://www.xml-cml.org/schema" schemaLocation="CMLforMesmer.xsd"/>
  <xs:include schemaLocation="mesmer.xsd"/>
  
  <xs:simpleType name="distribCalcName">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Boltzmann"/>
      <xs:enumeration value="Prior"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="ExponentialDown">
    <xs:complexContent>
      <xs:extension base="energyTransferct">
        <xs:group ref="deltaEDownGrp" maxOccurs="unbounded"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="deltaEDownGrp">
    <xs:sequence>
      <xs:element name="deltaEDown" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            "Attributes bathGas and ref are alternatives.
            Omit both if the bathGas is the one specified in the
            &lt;me:conditions> section"
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:float">
              <xs:attribute name="bathGas" use="optional" />
              <xs:attribute name="ref" use="optional" />
              <xs:attribute name="units" type="energyUnitsType" use="required" />
              <xs:attributeGroup ref="me:rangeAttributes"/>
              <xs:attributeGroup ref="me:linkAttributes"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="deltaEDownTExponent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            "Adds a temperature dependence: multiplies deltaEDown
            by (T / refTemp)^deltaEDownTExponent. The parameter defaults to 0,
            and refTemp defaults to 298K.
            Attributes bathGas and ref are alternatives.
            Omit both if the bathGas is the one specified in the
            &lt;me:conditions> section"
          </xs:documentation>
        </xs:annotation>
          <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:float">
              <xs:attribute name="bathGas" use="optional" />
              <xs:attribute name="ref" use="optional" />
              <xs:attribute name="referenceTemperature" type="xs:decimal" use="optional" />
              <xs:attributeGroup ref="rangeAttributes"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="deltaEDownActivationParam" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            "Adds a temperature dependence: multiplies deltaEDown
            by exp(-deltaEDownActivationParam/T). The parameter defaults to 0.
            Attributes bathGas and ref are alternatives.
            Omit both if the bathGas is the one specified in the
            &lt;me:conditions> section"
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:float">
              <xs:attribute name="units" use="optional" />
              <xs:attribute name="bathGas" use="optional" />
              <xs:attribute name="ref" use="optional" />
              <xs:attributeGroup ref="rangeAttributes"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="gaussian">
    <xs:complexContent>
      <xs:extension base="energyTransferct">
        <xs:all>
          <xs:element name="gaussianCenter">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="me:energyUnitsType" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="gaussianWidth">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="me:energyUnitsType" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="MCRCMethodName">
    <xs:restriction base="xs:string">
      <!--Only those with no data-->
      <xs:enumeration value="SimpleRRKM"/>
      <xs:enumeration value="DefinedSumOfStates"/>
    </xs:restriction>
  </xs:simpleType>

 
  <xs:complexType name="MCRCMethodct">
    <xs:sequence></xs:sequence>
    <xs:attribute name="name"  type="xs:string" use="optional" />
  </xs:complexType>

  <xs:complexType name="MesmerILT">
    <xs:complexContent>
      <xs:extension base="MCRCMethodct">
        <xs:all>
          <xs:element name="preExponential">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="rateConstUnits" use="required" />
                  <xs:attributeGroup ref="rangeAttributes"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="activationEnergy">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="energyUnitsType" use="required" />
                  <xs:attribute name="reverse" type="me:ynboolean" use="optional" />
                  <xs:attributeGroup ref="rangeAttributes"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="nInfinity" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The temperature exponent of (T/Tinf)
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attributeGroup ref="rangeAttributes"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>

          </xs:element>
          <xs:element name="TInfinity" type="xs:decimal" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                TInfinity is the reference temperature and cannot have a range
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="excessReactantConc" type="xs:float" minOccurs="0">
          </xs:element>
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DefinedSumOfStates">
    <xs:complexContent>
      <xs:extension base="MCRCMethodct">
        <xs:sequence>
          <xs:element name="SumOfStates">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="SumOfStatesPoint">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="xs:float">
                        <xs:attribute name="energy" type="xs:float" use="required"/>
                        <xs:attribute name="angMomMag" type="xs:float" use="optional"/>
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="units" type="me:energyUnitsType" use="required"/>
              <xs:attribute name="angularMomentum" type="me:ynboolean" use="optional"/>
              <xs:attribute name="noLogSpline" type="me:ynboolean" use="optional"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="ExtraDOSCt">
    <xs:sequence></xs:sequence>
    <xs:attribute name="name" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:simpleType name="bondRefType">
    <xs:annotation>
      <xs:documentation>spaces</xs:documentation>
    </xs:annotation>
    <xs:restriction base="cml:bondRefType">
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="HinderedRotorQM1D">
    <xs:complexContent>
      <xs:extension base="ExtraDOSCt">
        <xs:sequence>
          <xs:element name="bondRef" type="bondRefType"/>
          <xs:element name="replaceVibFreq" type="xs:decimal" minOccurs="0"/>
          <xs:element name="InternalRotorInertia" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="InertiaPoint" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:attribute name="index" type="xs:nonNegativeInteger" use="required"/>
                    <xs:attribute name="coefficient" type="xs:float" use="required"/>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="units" type="HinderedRotorInertiaType" use="optional"/>
            </xs:complexType>
          </xs:element>
          <xs:element name="HinderedRotorPotential">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="PotentialPoint" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:attribute name="index" type="xs:unsignedInt" use="optional" />
                    <xs:attribute name="coefficient" type="xs:float" use="optional" />
                    <xs:attribute name="angle" type="xs:float" use="optional" />
                    <xs:attribute name="potential" type="xs:float" use="optional" />
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="format" type="hinderedRotorFormatType" use="required" />
              <xs:attribute name="units" type="me:energyUnitsType" use="required" />
              <xs:attribute name="expansionSize" type="xs:unsignedInt" use="optional" />
              <xs:attribute name="useSineTerms" type="me:ynboolean" use="optional" />
              <xs:attribute name="scale" type="xs:float" use="optional" />
            </xs:complexType>
          </xs:element>
          <xs:element name="periodicity" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="PlotStates" minOccurs="0" />
          <xs:element name="WriteStates" minOccurs="0" />
          <xs:element name="CalculateInternalRotorInertia" minOccurs="0">
            <xs:complexType>
              <xs:attribute name="phaseDifference" type="xs:float" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element name="ConfigurationalData" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="HinderedRotorCM1D">
    <xs:complexContent>
      <xs:extension base="ExtraDOSCt">
        <xs:sequence>
          <xs:element name="bondRef" type="cml:bondRefType"/>
          <xs:element name="replaceVibFreq" type="xs:decimal" minOccurs="0"/>
          <xs:element name="HinderedRotorPotential">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="PotentialPoint" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:attribute name="index" type="xs:unsignedInt" use="required" />
                    <xs:attribute name="coefficient" type="xs:decimal" use="required" />
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="format" type="hinderedRotorFormatType" use="required" />
              <xs:attribute name="units" type="xs:string" use="required" />
              <xs:attribute name="expansionSize" type="xs:unsignedInt" use="optional" />
            </xs:complexType>
          </xs:element>
          <xs:element name="periodicity" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element minOccurs="0" name="PlotStates" />
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="hinderedRotorFormatType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="numerical"/>
      <xs:enumeration value="analytical"/>  
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="HinderedRotorInertiaType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="cm-1"/>
      <xs:enumeration value="amuA^2"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="Morse">
    <xs:complexContent>
      <xs:extension base="ExtraDOSCt">
        <xs:sequence>
          <xs:element name="MorseParameters" maxOccurs="unbounded">
            <xs:complexType>
              <xs:attribute name="vibrationalFrequency" type="xs:decimal"/>
              <xs:attribute name="anharmonicity" type="xs:decimal"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="DOSCMethodName">
    <xs:annotation>
      <xs:documentation>
        The default is ClassicalRotors
      </xs:documentation>
    </xs:annotation>
    <xs:restriction  base="xs:string">
      <xs:enumeration value=""/>
      <xs:enumeration value="ClassicalRotors"/>
      <xs:enumeration value="QMRotors"/>
      <xs:enumeration value="DefinedStatesRotors"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="fitting">
    <xs:complexContent>
      <xs:extension base="calcMethodct">
        <xs:all>
          <xs:element name="fittingIterations" type="xs:integer" minOccurs="0"/>
          <xs:element name="fittingTolerance" type="xs:float" minOccurs="0"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="analyticalRepresentation">
    <xs:complexContent>
      <xs:extension base="calcMethodct">
        <xs:all>
          <xs:element name="format" minOccurs="0">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="analRepFormatType">
                  <xs:attribute name="rateUnits" type="rateConstUnits" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
           </xs:complexType>
          </xs:element>
          <xs:element name="precision" type="me:precisionType" minOccurs="0"/>
          <xs:element name="chebNumTemp" type="xs:integer" minOccurs="0"/> 
          <xs:element name="chebNumConc" type="xs:integer" minOccurs="0"/> 
          <xs:element name="chebMinTemp" type="xs:decimal" minOccurs="0"/>
          <xs:element name="chebMaxTemp" type="xs:decimal" minOccurs="0"/>
          <xs:element name="chebMinConc" minOccurs="0">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="me:concUnitsType" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="chebMaxConc" minOccurs="0">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="me:concUnitsType" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
            <xs:element name="chebTExSize" type="xs:integer" minOccurs="0"/>
          <xs:element name="chebPExSize" type="xs:integer" minOccurs="0"/>
          <xs:element name="chebDoForAllBathGases" minOccurs="0"/>
          <xs:element name="fittingIterations" type="xs:integer" minOccurs="0"/>
          <xs:element name="fittingTolerance" type="xs:float" minOccurs="0"/>
          <xs:element name="representation" type="xs:string" minOccurs="0"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="analRepFormatType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="cantera"/>
      <xs:enumeration value="chemkin"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="marquardt">
    <xs:complexContent>
      <xs:extension base="calcMethodct">
        <xs:all>
          <xs:element name="MarquardtIterations" type="xs:integer" minOccurs="0"/>
          <xs:element name="MarquardtTolerance" type="xs:float" minOccurs="0"/>
          <xs:element name="MarquardtDerivDelta" type="xs:float" minOccurs="0"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="sensitivityAnalysis">
    <xs:complexContent>
      <xs:extension base="calcMethodct">
        <xs:all>
          <xs:element name="sensitivityAnalysisSamples" type="xs:integer" minOccurs="0"/>
          <xs:element name="sensitivityGenerateData" type="ynboolean" minOccurs="0"/>
          <xs:element name="sensitivityAnalysisOrder" type="xs:integer" minOccurs="0"/>
          <xs:element name="sensitivityNumVarRedIters" type="xs:integer" minOccurs="0"/>
          <xs:element name="sensitivityVarRedMethod" type="xs:string" minOccurs="0"/>
          <xs:element name="sensitivityAnalysisTables" minOccurs="0"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ThermoParamType">
    <xs:simpleContent>
    <xs:extension base="xs:float">
      <xs:attribute name="default" type="me:ynboolean" use="optional"/>
    </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

    <xs:complexType name="ThermodynamicTable">
    <xs:complexContent>
      <xs:extension base="calcMethodct">
        <xs:all>
          <xs:element name="units" type="me:energyUnitsType" minOccurs="0"/>
          <!--<xs:element name="NumberOfTemp" type="xs:positiveInteger" minOccurs="0"/>
          <xs:element name="TempInterval" type="xs:float" minOccurs="0"/>-->
          <xs:element name="Tmin" type="ThermoParamType" minOccurs="0"/>
          <xs:element name="Tmax" type="ThermoParamType" minOccurs="0"/>
          <xs:element name="Tstep" type="ThermoParamType" minOccurs="0"/>
          <xs:element name="Tmid" type="ThermoParamType" minOccurs="0"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Prior">
    <xs:complexContent>
      <xs:extension base="distributionMethodct">
        <xs:sequence>
          <xs:element name="CoFragment" type="cml:moleculeIDType" minOccurs="1"/>
          <xs:element name="EnergyExcess" minOccurs="1">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="me:energyUnitsType" use="required"/>
                  <xs:attributeGroup ref="rangeAttributes"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="States">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="State" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="energy" type="xs:decimal" use="required"/>
            <xs:attribute name="degeneracy" type="xs:integer" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="units" type="energyUnitsType" use="optional"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="WKB">
    <xs:complexContent>
      <xs:extension base ="tunnelingt">
        <xs:sequence>
          <xs:element name="IRCPotential">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="PotentialPoint" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence></xs:sequence>
                    <xs:attribute name="ReacCoord" type="xs:float" use="required"/>
                    <xs:attribute name="potential" type="xs:float" use="required"/>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="units" type="me:energyUnitsType" use="required"/>
              <xs:attribute name="ReducedMass" type="xs:float" use="required"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Defined">
    <xs:complexContent>
      <xs:extension base ="tunnelingt">
        <xs:sequence>
          <xs:element name="DefinedTunnelingCoefficients">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DefinedPE" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence></xs:sequence>
                    <xs:attribute name="energy" type="xs:float" use="required"/>
                    <xs:attribute name="pE" type="xs:float" use="required"/>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="units" type="me:energyUnitsType" use="required"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
    </xs:complexType>

  
  <xs:complexType name="LZCrossing">
    <xs:complexContent>
      <xs:extension base="crossingt">
        <xs:sequence>
          <xs:element name="RMS_SOC_element" >
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="energyUnitsType" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="GradientDifferenceMagnitude">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="GradientReducedMass">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
            </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="WKBCrossing">
    <xs:complexContent>
      <xs:extension base="crossingt">
        <xs:sequence>
          <xs:element name="RMS_SOC_element" >
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" type="energyUnitsType" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="GradientDifferenceMagnitude">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="GradientReducedMass">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="AverageSlope" minOccurs="0">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:float">
                  <xs:attribute name="units" use="required"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

</xs:schema>
